snippet #!
	#!/usr/bin/python
snippet argv
	import sys,getopt
	argv = sys.argv[1:]
	input = ''
	output = ''
	usage = 'python ' + sys.argv[0] + ' -i <input>  -o <output>'
	example = 'python ' + sys.argv[0] + ' -i <input>  -o <output>'
	try:
	    opts,args = getopt.getopt(argv,"hi:o:")
	except getopt.GetoptError:
	    print usage + "\n" + example 
	    sys.exit(2)
	for opt, arg in opts:
	    if opt == '-h':
		print usage + "\n" + example 
		sys.exit()
	    elif opt in ("-i"):
		input = arg
	    elif opt in ("-o"):
		output = arg
	print('Script path:\t'+ sys.argv[0])
	print('Input file:\t' + input)
	print('Output file:\t'+ output)
snippet #--
	#-----------------${1}
snippet #----
	#-----------------------------------
	#-----------------------------------
	#-----------${1}--------------------
snippet withf 
	with(${1:input}) as f:
	    line = f.readline()
	    while line:
		${2:line = line.strip()}
		line = f.readline()
snippet imp
	import ${1:module}
# Module Docstring
snippet docs
	'''
	File: ${1:`Filename('$1.py', 'foo.py')`}
	Author: ${2:`g:snips_author`}
	Description: ${3}
	Input: ${4}
	Output: ${5}
	'''
snippet wh
	while ${1:condition}:
		${2:# code...}
snippet for
	for ${1:needle} in ${2:haystack}:
		${3:# code...}
# New Class
snippet cl
	class ${1:ClassName}(${2:object}):
		"""${3:docstring for $1}"""
		def __init__(self, ${4:arg}):
			${5:super($1, self).__init__()}
			self.$4 = $4
			${6}
# New Function
snippet def
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
		"""${3:docstring for $1}"""
		${4:pass}
snippet deff
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
		${3}
# New Method
snippet defs
	def ${1:mname}(self, ${2:arg}):
		${3:pass}
# New Property
snippet property
	def ${1:foo}():
		doc = "${2:The $1 property.}"
		def fget(self):
			${3:return self._$1}
		def fset(self, value):
			${4:self._$1 = value}
# Lambda
snippet ld
	${1:var} = lambda ${2:vars} : ${3:action}
snippet .
	self.
snippet try Try/Except
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
snippet try Try/Except/Else
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
snippet try Try/Except/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	finally:
		${5:pass}
snippet try Try/Except/Else/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
	finally:
		${6:pass}
# if __name__ == '__main__':
snippet ifmain
	if __name__ == '__main__':
		${1:main()}
# __magic__
snippet _
	__${1:init}__${2}
